{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/Header.tsx"],"sourcesContent":["import React from 'react';\r\nimport { UserCircleIcon, LogOutIcon } from 'lucide-react';\r\nimport { useAuth } from '../context/AuthContext';\r\nexport const Header = () => {\r\n  const {\r\n    user,\r\n    logout\r\n  } = useAuth();\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n  return <header className=\"bg-white shadow-sm border-b border-gray-200\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <div className=\"flex-shrink-0\">\r\n              <h1 className=\"text-xl font-bold text-blue-600\">MediClinic</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"hidden md:flex items-center text-sm text-gray-800\">\r\n              <span className=\"font-bold text-gray-900\">{user?.fullName || user?.username}</span>\r\n              <span className=\"mx-2 text-gray-600\">|</span>\r\n              <span>{user?.specialization || user?.role}</span>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              {/* <button className=\"p-1 rounded-full text-gray-600 hover:text-blue-600 focus:outline-none\">\r\n                <UserCircleIcon className=\"h-8 w-8\" />\r\n              </button> */}\r\n              <button onClick={handleLogout} className=\"ml-2 p-1 rounded-full text-gray-600 hover:text-red-600 focus:outline-none flex items-center cursor-pointer\">\r\n                <LogOutIcon className=\"h-5 w-5\" />\r\n                <span className=\"ml-1 text-sm hidden sm:inline\">Đăng xuất</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>;\r\n};"],"names":[],"mappings":";;;;AACA;AACA;;;;;AACO,MAAM,SAAS;;IACpB,MAAM,EACJ,IAAI,EACJ,MAAM,EACP,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD;IACV,MAAM,eAAe;QACnB;IACF;IACA,qBAAO,6LAAC;QAAO,WAAU;kBACrB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAG,WAAU;0CAAkC;;;;;;;;;;;;;;;;kCAGpD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAA2B,MAAM,YAAY,MAAM;;;;;;kDACnE,6LAAC;wCAAK,WAAU;kDAAqB;;;;;;kDACrC,6LAAC;kDAAM,MAAM,kBAAkB,MAAM;;;;;;;;;;;;0CAEvC,6LAAC;gCAAI,WAAU;0CAIb,cAAA,6LAAC;oCAAO,SAAS;oCAAc,WAAU;;sDACvC,6LAAC,iNAAA,CAAA,aAAU;4CAAC,WAAU;;;;;;sDACtB,6LAAC;4CAAK,WAAU;sDAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOhE;GAnCa;;QAIP,wIAAA,CAAA,UAAO;;;KAJA","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/PatientCard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ClockIcon, PhoneIcon } from 'lucide-react';\r\nimport { User } from '../datats/mockPatients';\r\n\r\n// Interface cho thông tin bệnh nhân trong hàng đợi\r\ninterface PatientInQueue {\r\n  _id: string;\r\n  patient: string;\r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\r\n  doctorId?: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v?: number;\r\n  patientInfo: User | null;\r\n}\r\n\r\ninterface PatientCardProps {\r\n  patientInQueue: PatientInQueue;\r\n  isSelected: boolean;\r\n  onSelect: () => void;\r\n}\r\n\r\nexport const PatientCard: React.FC<PatientCardProps> = ({\r\n  patientInQueue,\r\n  isSelected,\r\n  onSelect\r\n}) => {\r\n  // Lấy thông tin người dùng từ patientInQueue\r\n  const patient = patientInQueue.patientInfo;\r\n  \r\n  if (!patient) {\r\n    return null; // Không hiển thị nếu không có thông tin người dùng\r\n  }\r\n  \r\n  const [waitingTime, setWaitingTime] = useState(() => \r\n    Math.floor((new Date().getTime() - new Date(patientInQueue.createdAt).getTime()) / 60000)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setWaitingTime(Math.floor((new Date().getTime() - new Date(patientInQueue.createdAt).getTime()) / 60000));\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [patientInQueue.createdAt]);\r\n\r\n  const formatPhoneNumber = (phone: string) => {\r\n    if (phone.startsWith('+84')) {\r\n      return phone.replace(/(\\+84)(\\d{3})(\\d{3})(\\d{3})/, '$1 $2 $3 $4');\r\n    }\r\n    return phone.replace(/(\\d{4})(\\d{3})(\\d{3})/, '$1 $2 $3');\r\n  };\r\n\r\n  return <div className={`p-4 cursor-pointer transition-colors ${isSelected ? 'bg-blue-50 border-l-4 border-blue-500' : 'hover:bg-gray-50'}`} onClick={onSelect}>\r\n      <div className=\"flex justify-between items-start\">\r\n        <div className=\"flex-1\">\r\n          <h3 className=\"text-base font-semibold text-gray-900\">{patient.fullName}</h3>\r\n          {/* Trong User mockPatients không có age và gender nên hiển thị thông tin có sẵn */}\r\n          <p className=\"text-sm text-gray-800\">\r\n            {patient.role} • {new Date(patientInQueue.createdAt).toLocaleDateString()}\r\n          </p>\r\n          <div className=\"flex items-center text-sm text-gray-800 mt-1\">\r\n            <PhoneIcon className=\"h-3 w-3 mr-1\" />\r\n            {formatPhoneNumber(patient.phone)}\r\n          </div>\r\n          <p className=\"text-sm text-gray-800 mt-1\">{patient.email}</p>\r\n        </div>\r\n        <div className=\"flex flex-col items-end\">\r\n          <div className=\"flex items-center mt-1 text-sm text-gray-900 font-medium\">\r\n            <ClockIcon className=\"h-4 w-4 mr-1\" />\r\n            <span>Đợi: {waitingTime} phút</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;;;AAHA;;;AAwBO,MAAM,cAA0C,CAAC,EACtD,cAAc,EACd,UAAU,EACV,QAAQ,EACT;;IACC,6CAA6C;IAC7C,MAAM,UAAU,eAAe,WAAW;IAE1C,IAAI,CAAC,SAAS;QACZ,OAAO,MAAM,mDAAmD;IAClE;IAEA,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;gCAAE,IAC7C,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,IAAI,KAAK,eAAe,SAAS,EAAE,OAAO,EAAE,IAAI;;IAGrF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM,WAAW;kDAAY;oBAC3B,eAAe,KAAK,KAAK,CAAC,CAAC,IAAI,OAAO,OAAO,KAAK,IAAI,KAAK,eAAe,SAAS,EAAE,OAAO,EAAE,IAAI;gBACpG;iDAAG;YACH;yCAAO,IAAM,cAAc;;QAC7B;gCAAG;QAAC,eAAe,SAAS;KAAC;IAE7B,MAAM,oBAAoB,CAAC;QACzB,IAAI,MAAM,UAAU,CAAC,QAAQ;YAC3B,OAAO,MAAM,OAAO,CAAC,+BAA+B;QACtD;QACA,OAAO,MAAM,OAAO,CAAC,yBAAyB;IAChD;IAEA,qBAAO,6LAAC;QAAI,WAAW,CAAC,qCAAqC,EAAE,aAAa,0CAA0C,oBAAoB;QAAE,SAAS;kBACjJ,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAyC,QAAQ,QAAQ;;;;;;sCAEvE,6LAAC;4BAAE,WAAU;;gCACV,QAAQ,IAAI;gCAAC;gCAAI,IAAI,KAAK,eAAe,SAAS,EAAE,kBAAkB;;;;;;;sCAEzE,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,2MAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCACpB,kBAAkB,QAAQ,KAAK;;;;;;;sCAElC,6LAAC;4BAAE,WAAU;sCAA8B,QAAQ,KAAK;;;;;;;;;;;;8BAE1D,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,2MAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,6LAAC;;oCAAK;oCAAM;oCAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;GApDa;KAAA","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/PatientList.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { PatientCard } from './PatientCard';\r\nimport { User } from '../datats/mockPatients';\r\n\r\n// Interface cho thông tin bệnh nhân trong hàng đợi\r\ninterface PatientInQueue {\r\n  _id: string; // ID của queue\r\n  patient: string; // ID của bệnh nhân\r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\r\n  doctorId?: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v?: number;\r\n  patientInfo: User | null;\r\n}\r\n\r\ninterface PatientListProps {\r\n  patients: PatientInQueue[];\r\n  onSelectPatient: (patient: PatientInQueue) => void;\r\n  selectedPatientId?: string;\r\n}\r\n\r\nexport const PatientList: React.FC<PatientListProps> = ({\r\n  patients,\r\n  onSelectPatient,\r\n  selectedPatientId\r\n}) => {\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md h-full\">\r\n      <div className=\"p-4 border-b border-gray-200 flex items-center justify-between\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900\">Danh sách bệnh nhân</h2>\r\n      </div>\r\n      <div className=\"p-4 overflow-y-auto\" style={{ maxHeight: 'calc(100vh - 200px)' }}>\r\n        {patients.length === 0 ? (\r\n          <div className=\"text-center text-gray-700 text-sm\">Không có bệnh nhân trong danh sách chờ.</div>\r\n        ) : (\r\n          <div className=\"space-y-2\">\r\n            {patients.map((patient, idx) => (\r\n              <div key={patient._id} className={idx === 0 ? '' : 'opacity-50 pointer-events-none'}>\r\n                <PatientCard\r\n                  patientInQueue={patient}\r\n                  isSelected={selectedPatientId === patient._id}\r\n                  onSelect={() => idx === 0 && onSelectPatient(patient)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAwBO,MAAM,cAA0C,CAAC,EACtD,QAAQ,EACR,eAAe,EACf,iBAAiB,EAClB;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAAsC;;;;;;;;;;;0BAEtD,6LAAC;gBAAI,WAAU;gBAAsB,OAAO;oBAAE,WAAW;gBAAsB;0BAC5E,SAAS,MAAM,KAAK,kBACnB,6LAAC;oBAAI,WAAU;8BAAoC;;;;;yCAEnD,6LAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,SAAS,oBACtB,6LAAC;4BAAsB,WAAW,QAAQ,IAAI,KAAK;sCACjD,cAAA,6LAAC,oJAAA,CAAA,cAAW;gCACV,gBAAgB;gCAChB,YAAY,sBAAsB,QAAQ,GAAG;gCAC7C,UAAU,IAAM,QAAQ,KAAK,gBAAgB;;;;;;2BAJvC,QAAQ,GAAG;;;;;;;;;;;;;;;;;;;;;AAanC;KA7Ba","debugId":null}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/datats/mockPatients.ts"],"sourcesContent":["// Mock database dựa trên cấu trúc MongoDB\r\n\r\n// Khai báo các interface\r\nexport interface User {\r\n  _id: string;\r\n  userId: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  fullName: string;\r\n  phone: string;\r\n  role: 'PATIENT' | 'DOCTOR' | 'PHARMACIST' | 'RECEPTIONIST' | 'ADMIN';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n}\r\n\r\nexport interface Queue {\r\n  _id: string;\r\n  patient: string; // ObjectId của bệnh nhân\r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\r\n  doctorId?: string; // ObjectId của bác sĩ được chỉ định (nếu có)\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v: number;\r\n}\r\n\r\nexport interface Prescription {\r\n  _id: string;\r\n  customPrescriptionId: string;\r\n  patientId: string; // ObjectId\r\n  doctorId: string; // ObjectId\r\n  diagnosis: string;\r\n  date: string;\r\n  status: 'PENDING_DISPENSE' | 'DISPENSED' | 'CANCELED';\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface PrescriptionDetail {\r\n  _id: string;\r\n  customPrescriptionDetailId: string;\r\n  prescriptionId: string; // ObjectId\r\n  medicineId: string; // ObjectId\r\n  quantity: number;\r\n  dosage: string;\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface Medicine {\r\n  _id: string;\r\n  customMedicineId: string;\r\n  name: string;\r\n  totalPills: number;\r\n  price: number;\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface Invoice {\r\n  _id: string;\r\n  prescriptionId: string; // ObjectId\r\n  patientId: string; // ObjectId\r\n  totalAmount: number;\r\n  status: 'PAID' | 'UNPAID';\r\n  __v: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n// Mock data - Users (Patients, Doctors, etc.)\r\nexport const mockUsers: User[] = [\r\n  {\r\n    _id: '685face13fc4c04e1bd96c06',\r\n    userId: 'u1',\r\n    username: 'nguyen.an',\r\n    email: 'an.nguyen@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Nguyễn Văn An',\r\n    phone: '0901234567',\r\n    role: 'PATIENT',\r\n    createdAt: '2025-06-28T08:50:41.269+00:00',\r\n    updatedAt: '2025-06-28T08:50:41.269+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c07',\r\n    userId: 'u2',\r\n    username: 'tran.binh',\r\n    email: 'binh.tran@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Trần Văn Bình',\r\n    phone: '0912345678',\r\n    role: 'PATIENT',\r\n    createdAt: '2025-06-28T09:15:22.123+00:00',\r\n    updatedAt: '2025-06-28T09:15:22.123+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c08',\r\n    userId: 'd1',\r\n    username: 'dr.hoa',\r\n    email: 'hoa.doctor@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Bác sĩ Trần Thị Hoa',\r\n    phone: '0923456789',\r\n    role: 'DOCTOR',\r\n    createdAt: '2025-06-28T10:05:17.456+00:00',\r\n    updatedAt: '2025-06-28T10:05:17.456+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c09',\r\n    userId: 'u3',\r\n    username: 'le.chi',\r\n    email: 'chi.le@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Lê Thị Chi',\r\n    phone: '0934567890',\r\n    role: 'PATIENT',\r\n    createdAt: '2025-06-28T11:30:45.789+00:00',\r\n    updatedAt: '2025-06-28T11:30:45.789+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c0a',\r\n    userId: 'p1',\r\n    username: 'pham.dung',\r\n    email: 'dung.pham@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Phạm Văn Dũng',\r\n    phone: '0945678901',\r\n    role: 'PHARMACIST',\r\n    createdAt: '2025-06-28T12:45:33.012+00:00',\r\n    updatedAt: '2025-06-28T12:45:33.012+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c0b',\r\n    userId: 'r1',\r\n    username: 'receptionist.minh',\r\n    email: 'minh.receptionist@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Nguyễn Thị Minh',\r\n    phone: '0956789012',\r\n    role: 'RECEPTIONIST',\r\n    createdAt: '2025-06-28T14:20:10.345+00:00',\r\n    updatedAt: '2025-06-28T14:20:10.345+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c0c',\r\n    userId: 'a1',\r\n    username: 'admin.tuan',\r\n    email: 'tuan.admin@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Lê Minh Tuấn',\r\n    phone: '0967890123',\r\n    role: 'ADMIN',\r\n    createdAt: '2025-06-28T15:55:27.678+00:00',\r\n    updatedAt: '2025-06-28T15:55:27.678+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c0d',\r\n    userId: 'u4',\r\n    username: 'hoang.em',\r\n    email: 'em.hoang@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Hoàng Thị Em',\r\n    phone: '0978901234',\r\n    role: 'PATIENT',\r\n    createdAt: '2025-06-28T16:30:50.901+00:00',\r\n    updatedAt: '2025-06-28T16:30:50.901+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c0e',\r\n    userId: 'u5',\r\n    username: 'nguyen.khang',\r\n    email: 'khang.nguyen@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Nguyễn Minh Khang',\r\n    phone: '0989012345',\r\n    role: 'PATIENT',\r\n    createdAt: '2025-06-28T17:15:42.234+00:00',\r\n    updatedAt: '2025-06-28T17:15:42.234+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c0f',\r\n    userId: 'd2',\r\n    username: 'dr.trang',\r\n    email: 'trang.doctor@mediclinic.com',\r\n    password: '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: 'Bác sĩ Lê Thị Trang',\r\n    phone: '0990123456',\r\n    role: 'DOCTOR',\r\n    createdAt: '2025-06-28T18:40:15.567+00:00',\r\n    updatedAt: '2025-06-28T18:40:15.567+00:00',\r\n    __v: 0\r\n  }\r\n];\r\n\r\n// Mock data - Queue\r\nexport const mockQueues: Queue[] = [\r\n  {\r\n    _id: '685f10baa8040f24f1a9014d',\r\n    patient: '685face13fc4c04e1bd96c06', // Nguyễn Văn An\r\n    status: 'waiting',\r\n    createdAt: '2025-06-27T21:44:26.099+00:00',\r\n    updatedAt: '2025-06-27T21:44:26.102+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685f10baa8040f24f1a9014e',\r\n    patient: '685face13fc4c04e1bd96c07', // Trần Văn Bình\r\n    status: 'in_progress',\r\n    createdAt: '2025-06-27T22:30:15.456+00:00',\r\n    updatedAt: '2025-06-27T22:45:20.789+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685f10baa8040f24f1a9014f',\r\n    patient: '685face13fc4c04e1bd96c09', // Lê Thị Chi\r\n    status: 'completed',\r\n    createdAt: '2025-06-27T20:15:33.222+00:00',\r\n    updatedAt: '2025-06-27T21:05:42.111+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685f10baa8040f24f1a90150',\r\n    patient: '685face13fc4c04e1bd96c0d', // Hoàng Thị Em\r\n    status: 'waiting',\r\n    createdAt: '2025-06-28T08:22:17.345+00:00',\r\n    updatedAt: '2025-06-28T08:22:17.345+00:00',\r\n    __v: 0\r\n  },\r\n  {\r\n    _id: '685f10baa8040f24f1a90151',\r\n    patient: '685face13fc4c04e1bd96c0e', // Nguyễn Minh Khang\r\n    status: 'canceled',\r\n    createdAt: '2025-06-28T07:45:10.123+00:00',\r\n    updatedAt: '2025-06-28T08:15:23.456+00:00',\r\n    __v: 0\r\n  }\r\n];\r\n\r\n// Mock data - Medicines\r\nexport const mockMedicines: Medicine[] = [\r\n  {\r\n    _id: '685face13fc4c04e1bd96c10',\r\n    customMedicineId: 'm1',\r\n    name: 'Paracetamol 500mg',\r\n    totalPills: 980,\r\n    price: 0.5,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:41.969+00:00',\r\n    updatedAt: '2025-06-28T10:57:49.516+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c11',\r\n    customMedicineId: 'm2',\r\n    name: 'Amoxicillin 500mg',\r\n    totalPills: 850,\r\n    price: 1.2,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.001+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.001+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c12',\r\n    customMedicineId: 'm3',\r\n    name: 'Ibuprofen 200mg',\r\n    totalPills: 1200,\r\n    price: 0.7,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.010+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.010+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c1a',\r\n    customMedicineId: 'm4',\r\n    name: 'Cetirizine 10mg',\r\n    totalPills: 750,\r\n    price: 0.8,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.022+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.022+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96c1b',\r\n    customMedicineId: 'm5',\r\n    name: 'Omeprazole 20mg',\r\n    totalPills: 630,\r\n    price: 1.5,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d20',\r\n    customMedicineId: 'm6',\r\n    name: 'Loratadine 10mg',\r\n    totalPills: 520,\r\n    price: 0.9,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d21',\r\n    customMedicineId: 'm7',\r\n    name: 'Amlodipine 5mg',\r\n    totalPills: 480,\r\n    price: 1.8,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d22',\r\n    customMedicineId: 'm8',\r\n    name: 'Atorvastatin 20mg',\r\n    totalPills: 360,\r\n    price: 2.5,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d23',\r\n    customMedicineId: 'm9',\r\n    name: 'Metformin 500mg',\r\n    totalPills: 720,\r\n    price: 0.6,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d24',\r\n    customMedicineId: 'm10',\r\n    name: 'Clopidogrel 75mg',\r\n    totalPills: 280,\r\n    price: 3.2,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d25',\r\n    customMedicineId: 'm11',\r\n    name: 'Losartan 50mg',\r\n    totalPills: 420,\r\n    price: 2.1,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d26',\r\n    customMedicineId: 'm12',\r\n    name: 'Simvastatin 40mg',\r\n    totalPills: 310,\r\n    price: 1.7,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d27',\r\n    customMedicineId: 'm13',\r\n    name: 'Aspirin 100mg',\r\n    totalPills: 940,\r\n    price: 0.3,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d28',\r\n    customMedicineId: 'm14',\r\n    name: 'Metoprolol 25mg',\r\n    totalPills: 390,\r\n    price: 1.9,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d29',\r\n    customMedicineId: 'm15',\r\n    name: 'Furosemide 40mg',\r\n    totalPills: 280,\r\n    price: 1.4,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d30',\r\n    customMedicineId: 'm16',\r\n    name: 'Pantoprazole 40mg',\r\n    totalPills: 450,\r\n    price: 2.0,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d31',\r\n    customMedicineId: 'm17',\r\n    name: 'Fluoxetine 20mg',\r\n    totalPills: 320,\r\n    price: 2.3,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d32',\r\n    customMedicineId: 'm18',\r\n    name: 'Sertraline 50mg',\r\n    totalPills: 290,\r\n    price: 2.4,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d33',\r\n    customMedicineId: 'm19',\r\n    name: 'Ranitidine 150mg',\r\n    totalPills: 580,\r\n    price: 0.8,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d34',\r\n    customMedicineId: 'm20',\r\n    name: 'Tramadol 50mg',\r\n    totalPills: 240,\r\n    price: 2.8,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d35',\r\n    customMedicineId: 'm21',\r\n    name: 'Diazepam 5mg',\r\n    totalPills: 180,\r\n    price: 3.5,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d36',\r\n    customMedicineId: 'm22',\r\n    name: 'Gabapentin 300mg',\r\n    totalPills: 340,\r\n    price: 2.2,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d37',\r\n    customMedicineId: 'm23',\r\n    name: 'Pregabalin 75mg',\r\n    totalPills: 260,\r\n    price: 3.1,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d38',\r\n    customMedicineId: 'm24',\r\n    name: 'Lisinopril 10mg',\r\n    totalPills: 410,\r\n    price: 1.6,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d39',\r\n    customMedicineId: 'm25',\r\n    name: 'Vitamin D3 1000IU',\r\n    totalPills: 790,\r\n    price: 0.4,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d40',\r\n    customMedicineId: 'm26',\r\n    name: 'Folic Acid 5mg',\r\n    totalPills: 870,\r\n    price: 0.3,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d41',\r\n    customMedicineId: 'm27',\r\n    name: 'Calcium Carbonate 500mg',\r\n    totalPills: 680,\r\n    price: 0.5,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d42',\r\n    customMedicineId: 'm28',\r\n    name: 'Azithromycin 500mg',\r\n    totalPills: 220,\r\n    price: 3.8,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d43',\r\n    customMedicineId: 'm29',\r\n    name: 'Ciprofloxacin 500mg',\r\n    totalPills: 250,\r\n    price: 2.9,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  },\r\n  {\r\n    _id: '685face13fc4c04e1bd96d44',\r\n    customMedicineId: 'm30',\r\n    name: 'Montelukast 10mg',\r\n    totalPills: 310,\r\n    price: 2.7,\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.029+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.029+00:00'\r\n  }\r\n];\r\n\r\n// Mock data - Prescriptions\r\nexport const mockPrescriptions: Prescription[] = [\r\n  {\r\n    _id: '685face23fc4c04e1bd96c13',\r\n    customPrescriptionId: 'pr1',\r\n    patientId: '685face13fc4c04e1bd96c06', // Nguyễn Văn An\r\n    doctorId: '685face13fc4c04e1bd96c08', // Bác sĩ Trần Thị Hoa\r\n    diagnosis: 'Common Cold',\r\n    date: '2024-06-01T10:00:00.000+00:00',\r\n    status: 'PENDING_DISPENSE',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.030+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.030+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c14',\r\n    customPrescriptionId: 'pr2',\r\n    patientId: '685face13fc4c04e1bd96c07', // Trần Văn Bình\r\n    doctorId: '685face13fc4c04e1bd96c0f', // Bác sĩ Lê Thị Trang\r\n    diagnosis: 'Allergic Rhinitis',\r\n    date: '2024-06-02T11:30:00.000+00:00',\r\n    status: 'DISPENSED',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T09:30:10.123+00:00',\r\n    updatedAt: '2025-06-28T10:15:22.456+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c15',\r\n    customPrescriptionId: 'pr3',\r\n    patientId: '685face13fc4c04e1bd96c09', // Lê Thị Chi\r\n    doctorId: '685face13fc4c04e1bd96c08', // Bác sĩ Trần Thị Hoa\r\n    diagnosis: 'Gastritis',\r\n    date: '2024-06-03T14:45:00.000+00:00',\r\n    status: 'PENDING_DISPENSE',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T14:50:33.789+00:00',\r\n    updatedAt: '2025-06-28T14:50:33.789+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c1c',\r\n    customPrescriptionId: 'pr4',\r\n    patientId: '685face13fc4c04e1bd96c0d', // Hoàng Thị Em\r\n    doctorId: '685face13fc4c04e1bd96c0f', // Bác sĩ Lê Thị Trang\r\n    diagnosis: 'Migraine',\r\n    date: '2024-06-04T09:15:00.000+00:00',\r\n    status: 'CANCELED',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T09:20:45.111+00:00',\r\n    updatedAt: '2025-06-28T11:05:17.222+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c1d',\r\n    customPrescriptionId: 'pr5',\r\n    patientId: '685face13fc4c04e1bd96c0e', // Nguyễn Minh Khang\r\n    doctorId: '685face13fc4c04e1bd96c08', // Bác sĩ Trần Thị Hoa\r\n    diagnosis: 'Hypertension',\r\n    date: '2024-06-05T16:00:00.000+00:00',\r\n    status: 'DISPENSED',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T16:05:22.333+00:00',\r\n    updatedAt: '2025-06-28T17:30:14.444+00:00'\r\n  }\r\n];\r\n\r\n// Mock data - Prescription Details\r\nexport const mockPrescriptionDetails: PrescriptionDetail[] = [\r\n  {\r\n    _id: '685face23fc4c04e1bd96c16',\r\n    customPrescriptionDetailId: 'pd1',\r\n    prescriptionId: '685face23fc4c04e1bd96c13', // pr1 - Common Cold\r\n    medicineId: '685face13fc4c04e1bd96c10', // Paracetamol 500mg\r\n    quantity: 10,\r\n    dosage: '1 tablet every 6 hours',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.083+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.083+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c17',\r\n    customPrescriptionDetailId: 'pd2',\r\n    prescriptionId: '685face23fc4c04e1bd96c13', // pr1 - Common Cold\r\n    medicineId: '685face13fc4c04e1bd96c1a', // Cetirizine 10mg\r\n    quantity: 5,\r\n    dosage: '1 tablet daily before sleep',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.085+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.085+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c18',\r\n    customPrescriptionDetailId: 'pd3',\r\n    prescriptionId: '685face23fc4c04e1bd96c14', // pr2 - Allergic Rhinitis\r\n    medicineId: '685face13fc4c04e1bd96c1a', // Cetirizine 10mg\r\n    quantity: 15,\r\n    dosage: '1 tablet daily in the morning',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T09:30:10.150+00:00',\r\n    updatedAt: '2025-06-28T09:30:10.150+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c19',\r\n    customPrescriptionDetailId: 'pd4',\r\n    prescriptionId: '685face23fc4c04e1bd96c15', // pr3 - Gastritis\r\n    medicineId: '685face13fc4c04e1bd96c1b', // Omeprazole 20mg\r\n    quantity: 14,\r\n    dosage: '1 tablet daily before breakfast',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T14:50:33.800+00:00',\r\n    updatedAt: '2025-06-28T14:50:33.800+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c1e',\r\n    customPrescriptionDetailId: 'pd5',\r\n    prescriptionId: '685face23fc4c04e1bd96c1c', // pr4 - Migraine\r\n    medicineId: '685face13fc4c04e1bd96c12', // Ibuprofen 200mg\r\n    quantity: 20,\r\n    dosage: '2 tablets every 8 hours when in pain',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T09:20:45.130+00:00',\r\n    updatedAt: '2025-06-28T09:20:45.130+00:00'\r\n  },\r\n  {\r\n    _id: '685face23fc4c04e1bd96c1f',\r\n    customPrescriptionDetailId: 'pd6',\r\n    prescriptionId: '685face23fc4c04e1bd96c1d', // pr5 - Hypertension\r\n    medicineId: '685face13fc4c04e1bd96c11', // Amoxicillin 500mg\r\n    quantity: 30,\r\n    dosage: '1 tablet three times daily after meals',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T16:05:22.350+00:00',\r\n    updatedAt: '2025-06-28T16:05:22.350+00:00'\r\n  }\r\n];\r\n\r\n// Mock data - Invoices\r\nexport const mockInvoices: Invoice[] = [\r\n  {\r\n    _id: '685f6f336bd59d7487de3ce8',\r\n    prescriptionId: '685face23fc4c04e1bd96c14', // pr2\r\n    patientId: '685face13fc4c04e1bd96c07', // Trần Văn Bình\r\n    totalAmount: 12.0,\r\n    status: 'PAID',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T10:15:22.456+00:00',\r\n    updatedAt: '2025-06-28T10:15:22.456+00:00'\r\n  },\r\n  {\r\n    _id: '685f6f336bd59d7487de3ce9',\r\n    prescriptionId: '685face23fc4c04e1bd96c1d', // pr5\r\n    patientId: '685face13fc4c04e1bd96c0e', // Nguyễn Minh Khang\r\n    totalAmount: 36.0,\r\n    status: 'PAID',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T17:30:14.444+00:00',\r\n    updatedAt: '2025-06-28T17:30:14.444+00:00'\r\n  },\r\n  {\r\n    _id: '685f6f336bd59d7487de3cea',\r\n    prescriptionId: '685face23fc4c04e1bd96c13', // pr1\r\n    patientId: '685face13fc4c04e1bd96c06', // Nguyễn Văn An\r\n    totalAmount: 9.0,\r\n    status: 'UNPAID',\r\n    __v: 0,\r\n    createdAt: '2025-06-28T08:50:42.030+00:00',\r\n    updatedAt: '2025-06-28T08:50:42.030+00:00'\r\n  }\r\n];\r\n\r\n// Hàm tiện ích để làm việc với dữ liệu\r\n\r\n// Users\r\nexport const getAllUsers = () => [...mockUsers];\r\n\r\nexport const getUserById = (id: string) => {\r\n  return mockUsers.find(user => user._id === id);\r\n};\r\n\r\nexport const getUsersByRole = (role: string) => {\r\n  return mockUsers.filter(user => user.role === role);\r\n};\r\n\r\nexport const searchUsers = (searchTerm: string) => {\r\n  const term = searchTerm.toLowerCase();\r\n  return mockUsers.filter(user => \r\n    user.fullName.toLowerCase().includes(term) || \r\n    user.username.toLowerCase().includes(term) ||\r\n    user.email.toLowerCase().includes(term) ||\r\n    user.phone.includes(term) ||\r\n    user.userId.includes(term)\r\n  );\r\n};\r\n\r\n// Queues\r\nexport const getAllQueues = () => [...mockQueues];\r\n\r\nexport const getQueuesByStatus = (status: string) => {\r\n  return mockQueues.filter(queue => queue.status === status);\r\n};\r\n\r\nexport const getQueueByPatientId = (patientId: string) => {\r\n  return mockQueues.find(queue => queue.patient === patientId);\r\n};\r\n\r\n// Medicines\r\nexport const getAllMedicines = () => [...mockMedicines];\r\n\r\nexport const getMedicineById = (id: string) => {\r\n  return mockMedicines.find(medicine => medicine._id === id);\r\n};\r\n\r\nexport const searchMedicines = (searchTerm: string) => {\r\n  const term = searchTerm.toLowerCase();\r\n  return mockMedicines.filter(medicine => \r\n    medicine.name.toLowerCase().includes(term) || \r\n    medicine.customMedicineId.includes(term)\r\n  );\r\n};\r\n\r\n// Prescriptions\r\nexport const getAllPrescriptions = () => [...mockPrescriptions];\r\n\r\nexport const getPrescriptionById = (id: string) => {\r\n  return mockPrescriptions.find(prescription => prescription._id === id);\r\n};\r\n\r\nexport const getPrescriptionsByPatientId = (patientId: string) => {\r\n  return mockPrescriptions.filter(prescription => prescription.patientId === patientId);\r\n};\r\n\r\nexport const getPrescriptionsByDoctorId = (doctorId: string) => {\r\n  return mockPrescriptions.filter(prescription => prescription.doctorId === doctorId);\r\n};\r\n\r\nexport const getPrescriptionsByStatus = (status: string) => {\r\n  return mockPrescriptions.filter(prescription => prescription.status === status);\r\n};\r\n\r\n// Prescription Details\r\nexport const getAllPrescriptionDetails = () => [...mockPrescriptionDetails];\r\n\r\nexport const getPrescriptionDetailsByPrescriptionId = (prescriptionId: string) => {\r\n  return mockPrescriptionDetails.filter(detail => detail.prescriptionId === prescriptionId);\r\n};\r\n\r\nexport const getMedicinesForPrescription = (prescriptionId: string) => {\r\n  const details = getPrescriptionDetailsByPrescriptionId(prescriptionId);\r\n  return details.map(detail => {\r\n    const medicine = getMedicineById(detail.medicineId);\r\n    return {\r\n      ...detail,\r\n      medicine: medicine || null\r\n    };\r\n  });\r\n};\r\n\r\n// Invoices\r\nexport const getAllInvoices = () => [...mockInvoices];\r\n\r\nexport const getInvoiceById = (id: string) => {\r\n  return mockInvoices.find(invoice => invoice._id === id);\r\n};\r\n\r\nexport const getInvoiceByPrescriptionId = (prescriptionId: string) => {\r\n  return mockInvoices.find(invoice => invoice.prescriptionId === prescriptionId);\r\n};\r\n\r\nexport const getInvoicesByPatientId = (patientId: string) => {\r\n  return mockInvoices.filter(invoice => invoice.patientId === patientId);\r\n};\r\n\r\nexport const getInvoicesByStatus = (status: string) => {\r\n  return mockInvoices.filter(invoice => invoice.status === status);\r\n};\r\n\r\n// Hàm hữu ích khác\r\nexport const getPatientFullPrescriptionDetails = (patientId: string) => {\r\n  // Lấy tất cả đơn thuốc của bệnh nhân\r\n  const prescriptions = getPrescriptionsByPatientId(patientId);\r\n  \r\n  return prescriptions.map(prescription => {\r\n    // Lấy thông tin bác sĩ\r\n    const doctor = getUserById(prescription.doctorId);\r\n    \r\n    // Lấy chi tiết đơn thuốc và thông tin thuốc\r\n    const details = getPrescriptionDetailsByPrescriptionId(prescription._id);\r\n    const medicineDetails = details.map(detail => {\r\n      const medicine = getMedicineById(detail.medicineId);\r\n      return {\r\n        ...detail,\r\n        medicineName: medicine ? medicine.name : 'Unknown',\r\n        medicinePrice: medicine ? medicine.price : 0\r\n      };\r\n    });\r\n    \r\n    // Lấy hóa đơn nếu có\r\n    const invoice = getInvoiceByPrescriptionId(prescription._id);\r\n    \r\n    return {\r\n      ...prescription,\r\n      doctorName: doctor ? doctor.fullName : 'Unknown',\r\n      details: medicineDetails,\r\n      invoice: invoice || null\r\n    };\r\n  });\r\n};\r\n\r\n// Hàm lấy danh sách bệnh nhân\r\nexport const getAllPatients = () => {\r\n  return mockUsers.filter(user => user.role === 'PATIENT');\r\n};\r\n\r\n// Hàm lấy danh sách bác sĩ\r\nexport const getAllDoctors = () => {\r\n  return mockUsers.filter(user => user.role === 'DOCTOR');\r\n};\r\n\r\n// Type aliases để thuận tiện cho việc sử dụng\r\nexport type Patient = User;\r\nexport const mockPatients = getAllPatients();\r\n\r\n// Hàm tạo MongoDB-like ID\r\nexport const generateMongoId = () => {\r\n  // MongoDB ObjectId format: 24 hex characters\r\n  const timestamp = Math.floor(Date.now() / 1000).toString(16).padStart(8, '0');\r\n  const randomPart = Array(16).fill(0).map(() => Math.floor(Math.random() * 16).toString(16)).join('');\r\n  return timestamp + randomPart;\r\n};\r\n\r\n// Hàm tạo userId tự động\r\nexport const generateNextUserId = () => {\r\n  // Tìm user ID lớn nhất hiện tại với pattern 'u' + number\r\n  const patientUserIds = mockUsers\r\n    .filter(user => user.role === 'PATIENT' && /^u\\d+$/.test(user.userId))\r\n    .map(user => parseInt(user.userId.substring(1)));\r\n  \r\n  const nextNumber = patientUserIds.length > 0 ? Math.max(...patientUserIds) + 1 : 1;\r\n  return `u${nextNumber}`;\r\n};\r\n\r\n// Hàm kiểm tra trùng lặp userId, username, email\r\nconst checkDuplicates = (patient: Partial<User>) => {\r\n  const errors = [];\r\n  \r\n  // Kiểm tra userId nếu được cung cấp\r\n  if (patient.userId && mockUsers.some(user => user.userId === patient.userId)) {\r\n    errors.push(`User ID '${patient.userId}' đã tồn tại`);\r\n  }\r\n  \r\n  // Kiểm tra username nếu được cung cấp\r\n  if (patient.username && mockUsers.some(user => user.username === patient.username)) {\r\n    errors.push(`Username '${patient.username}' đã tồn tại`);\r\n  }\r\n  \r\n  // Kiểm tra email nếu được cung cấp\r\n  if (patient.email && mockUsers.some(user => user.email === patient.email)) {\r\n    errors.push(`Email '${patient.email}' đã tồn tại`);\r\n  }\r\n  \r\n  return errors;\r\n};\r\n\r\n// Hàm thêm bệnh nhân mới\r\nexport const addPatient = (patient: Partial<Omit<User, '_id' | 'createdAt' | 'updatedAt' | '__v'>>) => {\r\n  // Kiểm tra thông tin trùng lặp\r\n  const duplicateErrors = checkDuplicates(patient);\r\n  if (duplicateErrors.length > 0) {\r\n    throw new Error(`Không thể thêm bệnh nhân: ${duplicateErrors.join(', ')}`);\r\n  }\r\n\r\n  // Tạo ID MongoDB-like mới\r\n  const _id = generateMongoId();\r\n  const now = new Date().toISOString();\r\n  \r\n  // Tạo userId tự động nếu không được cung cấp\r\n  const userId = patient.userId || generateNextUserId();\r\n  \r\n  const newPatient: User = {\r\n    _id,\r\n    userId,\r\n    username: patient.username || `patient_${userId}`,\r\n    email: patient.email || `${userId}@example.com`,\r\n    password: patient.password || '$2a$10$iC8rd3mgPjzq/0USw63zquFgGmqpSJpECiKvlK',\r\n    fullName: patient.fullName || 'Bệnh nhân mới',\r\n    phone: patient.phone || '',\r\n    role: 'PATIENT',\r\n    createdAt: now,\r\n    updatedAt: now,\r\n    __v: 0\r\n  };\r\n  \r\n  mockUsers.push(newPatient);\r\n  return newPatient;\r\n};\r\n\r\n// Hàm cập nhật thông tin bệnh nhân\r\nexport const updatePatient = (id: string, patientData: Partial<User>) => {\r\n  const index = mockUsers.findIndex(user => user._id === id);\r\n  if (index === -1) {\r\n    return null;\r\n  }\r\n  \r\n  const currentUser = mockUsers[index];\r\n  \r\n  // Kiểm tra trùng lặp với các user khác (không phải chính user này)\r\n  const duplicateErrors = [];\r\n  \r\n  // Kiểm tra userId nếu thay đổi\r\n  if (patientData.userId && patientData.userId !== currentUser.userId) {\r\n    if (mockUsers.some(user => user.userId === patientData.userId)) {\r\n      duplicateErrors.push(`User ID '${patientData.userId}' đã tồn tại`);\r\n    }\r\n  }\r\n  \r\n  // Kiểm tra username nếu thay đổi\r\n  if (patientData.username && patientData.username !== currentUser.username) {\r\n    if (mockUsers.some(user => user.username === patientData.username)) {\r\n      duplicateErrors.push(`Username '${patientData.username}' đã tồn tại`);\r\n    }\r\n  }\r\n  \r\n  // Kiểm tra email nếu thay đổi\r\n  if (patientData.email && patientData.email !== currentUser.email) {\r\n    if (mockUsers.some(user => user.email === patientData.email)) {\r\n      duplicateErrors.push(`Email '${patientData.email}' đã tồn tại`);\r\n    }\r\n  }\r\n  \r\n  if (duplicateErrors.length > 0) {\r\n    throw new Error(`Không thể cập nhật bệnh nhân: ${duplicateErrors.join(', ')}`);\r\n  }\r\n  \r\n  // Cập nhật thông tin user\r\n  mockUsers[index] = {\r\n    ...currentUser,\r\n    ...patientData,\r\n    updatedAt: new Date().toISOString()\r\n  };\r\n  \r\n  return mockUsers[index];\r\n};\r\n\r\n// Hàm xóa bệnh nhân\r\nexport const deletePatient = (id: string) => {\r\n  const index = mockUsers.findIndex(user => user._id === id);\r\n  if (index !== -1) {\r\n    const deletedPatient = mockUsers[index];\r\n    mockUsers.splice(index, 1);\r\n    return deletedPatient;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Hàm thêm queue mới\r\nexport const addQueue = (patientId: string, status: 'waiting' | 'in_progress' | 'completed' | 'canceled' = 'waiting') => {\r\n  // Kiểm tra xem patientId có tồn tại và là bệnh nhân không\r\n  const patient = getUserById(patientId);\r\n  if (!patient || patient.role !== 'PATIENT') {\r\n    console.error('Invalid patient ID or user is not a patient');\r\n    return null;\r\n  }\r\n\r\n  // Kiểm tra xem bệnh nhân đã có trong queue chưa\r\n  const existingQueue = getQueueByPatientId(patientId);\r\n  if (existingQueue) {\r\n    console.warn('Patient already in queue');\r\n    return existingQueue;\r\n  }\r\n\r\n  // Tạo queue mới\r\n  const newQueue: Queue = {\r\n    _id: `queue_${Date.now()}`,\r\n    patient: patientId,\r\n    status: status,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: new Date().toISOString(),\r\n    __v: 0\r\n  };\r\n\r\n  mockQueues.push(newQueue);\r\n  return newQueue;\r\n};\r\n\r\n// Interface mở rộng Queue để thêm thông tin bác sĩ\r\ninterface QueueWithDoctor extends Queue {\r\n  doctorId?: string;\r\n}\r\n\r\n// Hàm cập nhật trạng thái queue và có thể thêm bác sĩ nếu cần\r\nexport const updateQueueStatus = (\r\n  queueId: string, \r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled', \r\n  doctorId?: string\r\n) => {\r\n  const index = mockQueues.findIndex(queue => queue._id === queueId);\r\n  if (index !== -1) {\r\n    const updatedQueue: QueueWithDoctor = {\r\n      ...mockQueues[index],\r\n      status: status,\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    \r\n    // Nếu có doctorId và queue chuyển sang trạng thái in_progress, lưu doctorId vào queue\r\n    if (doctorId && status === 'in_progress') {\r\n      updatedQueue.doctorId = doctorId;\r\n    }\r\n    \r\n    mockQueues[index] = updatedQueue as Queue;\r\n    return mockQueues[index];\r\n  }\r\n  return null;\r\n};\r\n\r\n// Hàm xóa queue\r\nexport const deleteQueue = (queueId: string) => {\r\n  const index = mockQueues.findIndex(queue => queue._id === queueId);\r\n  if (index !== -1) {\r\n    const deletedQueue = mockQueues[index];\r\n    mockQueues.splice(index, 1);\r\n    return deletedQueue;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Hàm lấy danh sách bệnh nhân đang chờ khám\r\nexport const getWaitingPatients = () => {\r\n  const waitingQueues = getQueuesByStatus('waiting');\r\n  return waitingQueues.map(queue => {\r\n    const patient = getUserById(queue.patient);\r\n    return {\r\n      queueInfo: queue,\r\n      patientInfo: patient || null\r\n    };\r\n  });\r\n};\r\n\r\n// Hàm lấy tất cả queue kèm thông tin bệnh nhân\r\nexport const getAllQueuesWithPatientInfo = () => {\r\n  return mockQueues.map(queue => {\r\n    const patient = getUserById(queue.patient);\r\n    return {\r\n      ...queue,\r\n      patientInfo: patient || null\r\n    };\r\n  });\r\n};\r\n"],"names":[],"mappings":"AAAA,0CAA0C;AAE1C,yBAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyElB,MAAM,YAAoaAAsB;IACjC;QACE,KAAK;QACL,SAAS;QACT,QAAQ;QACR,WAAW;QACX,WAAW;QACX,KAAK;IACP;IACA;QACE,KAAK;QACL,SAAS;QACT,QAAQ;QACR,WAAW;QACX,WAAW;QACX,KAAK;IACP;IACA;QACE,KAAK;QACL,SAAS;QACT,QAAQ;QACR,WAAW;QACX,WAAW;QACX,KAAK;IACP;IACA;QACE,KAAK;QACL,SAAS;QACT,QAAQ;QACR,WAAW;QACX,WAAW;QACX,KAAK;IACP;IACA;QACE,KAAK;QACL,SAAS;QACT,QAAQ;QACR,WAAW;QACX,WAAW;QACX,KAAK;IACP;CACD;AAGM,MAAM,gBAA4B;IACvC;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,kBAAkB;QAClB,MAAM;QACN,YAAY;QACZ,OAAO;QACP,KAAK;QACL,WAAW;QACX,WAAW;IACb;CACD;AAGM,MAAM,oBAAoC;IAC/C;QACE,KAAK;QACL,sBAAsB;QACtB,WAAW;QACX,UAAU;QACV,WAAW;QACX,MAAM;QACN,QAAQ;QACR,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,sBAAsB;QACtB,WAAW;QACX,UAAU;QACV,WAAW;QACX,MAAM;QACN,QAAQ;QACR,KAAK;QACL,WAAW;QACX,WAAW;IACb;IACA;QACE,KAAK;QACL,sBAAsB;QACtB,WAAW;QACX,UAAU;QACV,WAAW;QACX,MAAM;QACN,QAAQ;QACR,KAAK;QACL,WA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","debugId":null}},
    {"offset": {"line": 1383, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/MedicineEntry.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Medicine as AuthMedicine } from '../datats/auth';\r\nimport { Medicine as MockMedicine, getAllMedicines } from '../datats/mockPatients';\r\nimport { TrashIcon, ChevronDownIcon } from 'lucide-react';\r\n\r\ninterface MedicineEntryProps {\r\n  medicine: AuthMedicine;\r\n  onUpdate: (medicine: AuthMedicine) => void;\r\n  onRemove: (id: string) => void;\r\n}\r\n\r\nexport const MedicineEntry: React.FC<MedicineEntryProps> = ({\r\n  medicine,\r\n  onUpdate,\r\n  onRemove\r\n}) => {\r\n  // State để lưu thông tin đơn thuốc\r\n  const [name, setName] = useState(medicine.name);\r\n  const [totalPills, setTotalPills] = useState(medicine.totalPills ? medicine.totalPills.toString() : '0');\r\n  const [schedule, setSchedule] = useState(medicine.schedule || '');\r\n  \r\n  // State để quản lý dropdown\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [availableMedicines, setAvailableMedicines] = useState<MockMedicine[]>([]);\r\n  const [filteredMedicines, setFilteredMedicines] = useState<MockMedicine[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n  // Lấy danh sách thuốc từ mockdata\r\n  useEffect(() => {\r\n    const medicines = getAllMedicines();\r\n    setAvailableMedicines(medicines);\r\n    setFilteredMedicines(medicines);\r\n    setSearchTerm(name); // Đặt giá trị tìm kiếm ban đầu là tên thuốc hiện tại\r\n  }, []);\r\n  \r\n  // Thêm sự kiện click ngoài để đóng dropdown\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      const target = event.target as HTMLElement;\r\n      if (!target.closest(`#medicine-dropdown-${medicine.id}`)) {\r\n        setIsDropdownOpen(false);\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [medicine.id]);\r\n\r\n  // Cập nhật lại danh sách thuốc được lọc khi nhập term tìm kiếm\r\n  useEffect(() => {\r\n    if (searchTerm.trim() === '') {\r\n      setFilteredMedicines(availableMedicines);\r\n    } else {\r\n      const filtered = availableMedicines.filter(med => \r\n        med.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      setFilteredMedicines(filtered);\r\n    }\r\n  }, [searchTerm, availableMedicines]);\r\n\r\n  // Xử lý khi chọn một loại thuốc từ danh sách\r\n  const handleSelectMedicine = (selectedMedicine: MockMedicine) => {\r\n    setName(selectedMedicine.name);\r\n    setIsDropdownOpen(false);\r\n    setSearchTerm(selectedMedicine.name);\r\n    \r\n    onUpdate({\r\n      ...medicine,\r\n      name: selectedMedicine.name,\r\n      totalPills: parseInt(totalPills) || 0,\r\n      schedule\r\n    });\r\n  };\r\n  \r\n  // Xử lý thay đổi số lượng và cách dùng\r\n  const handleChange = () => {\r\n    onUpdate({\r\n      ...medicine,\r\n      name,\r\n      totalPills: parseInt(totalPills) || 0,\r\n      schedule\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 p-4 rounded-lg shadow-sm border border-gray-200\">\r\n      <div className=\"grid grid-cols-12 gap-4 items-center\">\r\n        <div className=\"col-span-3\">\r\n          <label htmlFor={`medicine-name-${medicine.id}`} className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n            Tên thuốc\r\n          </label>\r\n          <div className=\"relative\" id={`medicine-dropdown-${medicine.id}`}>\r\n            <div \r\n              className=\"flex justify-between items-center w-full rounded-md border border-gray-300 shadow-sm px-3 py-2 bg-white focus-within:border-blue-500 focus-within:ring-1 focus-within:ring-blue-500 cursor-pointer\"\r\n              onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n            >\r\n              <input \r\n                type=\"text\"\r\n                id={`medicine-name-${medicine.id}`}\r\n                value={searchTerm}\r\n                onChange={(e) => {\r\n                  setSearchTerm(e.target.value);\r\n                  setIsDropdownOpen(true);\r\n                }}\r\n                onClick={(e) => e.stopPropagation()}\r\n                placeholder=\"Tìm thuốc...\"\r\n                className=\"border-none outline-none focus:ring-0 p-0 w-full text-base text-gray-800\"\r\n              />\r\n              <ChevronDownIcon className=\"h-5 w-5 text-gray-600\" />\r\n            </div>\r\n            \r\n            {isDropdownOpen && (\r\n              <div className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base overflow-auto focus:outline-none border border-gray-200\">\r\n                {filteredMedicines.length === 0 ? (\r\n                  <div className=\"px-3 py-2 text-sm text-gray-600\">Không tìm thấy thuốc</div>\r\n                ) : (\r\n                  filteredMedicines.map(med => (\r\n                    <div\r\n                      key={med._id}\r\n                      className=\"px-3 py-2 cursor-pointer hover:bg-blue-50 text-sm text-gray-800\"\r\n                      onClick={() => handleSelectMedicine(med)}\r\n                    >\r\n                      {med.name} - <span className=\"text-blue-600 font-medium\">{med.price}đ/viên</span>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-span-3\">\r\n          <label htmlFor={`medicine-total-${medicine.id}`} className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n            Tổng số viên\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id={`medicine-total-${medicine.id}`}\r\n            value={totalPills}\r\n            min={0}\r\n            onChange={(e) => {\r\n              setTotalPills(e.target.value);\r\n              handleChange();\r\n            }}\r\n            placeholder=\"0\"\r\n            className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base text-gray-800 placeholder-gray-400 px-3 py-2\"\r\n          />\r\n        </div>\r\n        <div className=\"col-span-5\">\r\n          <label htmlFor={`medicine-schedule-${medicine.id}`} className=\"block text-sm font-medium text-gray-800 mb-1\">\r\n            Lịch uống hàng ngày\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id={`medicine-schedule-${medicine.id}`}\r\n            value={schedule}\r\n            onChange={(e) => {\r\n              setSchedule(e.target.value);\r\n              handleChange();\r\n            }}\r\n            placeholder=\"VD: 1 sáng, 2 trưa, 1 tối\"\r\n            className=\"block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-base text-gray-800 placeholder-gray-400 px-3 py-2\"\r\n          />\r\n        </div>\r\n        <div className=\"col-span-1 flex items-end justify-end h-full\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onRemove(medicine.id)}\r\n            className=\"p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 rounded-md transition-colors\"\r\n            aria-label=\"Xóa thuốc\"\r\n          >\r\n            <TrashIcon className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1694, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/PatientProfile.tsx"],"sourcesContent":["import React from 'react';\r\nimport { PhoneIcon, MapPinIcon, MailIcon, UserIcon } from 'lucide-react';\r\nimport { User } from '../datats/mockPatients';\r\n\r\ntype PatientProfileProps = {\r\n  patient: User | null;\r\n};\r\nexport const PatientProfile = ({\r\n  patient\r\n}: PatientProfileProps) => {\r\n  const formatPhoneNumber = (phone: string) => {\r\n    // Format Vietnamese phone number: 0912 345 678 or +84 912 345 678\r\n    if (phone.startsWith('+84')) {\r\n      return phone.replace(/(\\+84)(\\d{3})(\\d{3})(\\d{3})/, '$1 $2 $3 $4');\r\n    }\r\n    return phone.replace(/(\\d{4})(\\d{3})(\\d{3})/, '$1 $2 $3');\r\n  };\r\n  if (!patient) {\r\n    return <div className=\"p-4 bg-gray-50 rounded-lg text-gray-500 text-sm\">Không có thông tin bệnh nhân</div>;\r\n  }\r\n  \r\n  return <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\r\n      <div className=\"space-y-3\">\r\n        <div className=\"flex items-center text-sm text-gray-800\">\r\n          <UserIcon className=\"h-4 w-4 mr-2 text-gray-600\" />\r\n          <div>\r\n            <span className=\"font-medium\">ID:</span> {patient.userId}\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center text-sm text-gray-800\">\r\n          <PhoneIcon className=\"h-4 w-4 mr-2 text-gray-600\" />\r\n          <div>\r\n            <span className=\"font-medium\">Số điện thoại:</span>{' '}\r\n            <a href={`tel:${patient.phone}`} className=\"text-blue-600 hover:text-blue-800\">\r\n              {formatPhoneNumber(patient.phone)}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"space-y-3\">\r\n        <div className=\"flex items-start text-sm text-gray-800\">\r\n          <MailIcon className=\"h-4 w-4 mr-2 mt-1 text-gray-600 flex-shrink-0\" />\r\n          <div>\r\n            <span className=\"font-medium\">Email:</span>{' '}\r\n            <a href={`mailto:${patient.email}`} className=\"text-blue-600 hover:text-blue-800\">\r\n              {patient.email}\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-start text-sm text-gray-800\">\r\n          <MapPinIcon className=\"h-4 w-4 mr-2 mt-1 text-gray-600 flex-shrink-0\" />\r\n          <div>\r\n            <span className=\"font-medium\">Ngày tạo:</span> {new Date(patient.createdAt).toLocaleDateString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AAAA;;;AAMO,MAAM,iBAAiB,CAAC,EAC7B,OAAO,EACa;IACpB,MAAM,oBAAoB,CAAC;QACzB,kEAAkE;QAClE,IAAI,MAAM,UAAU,CAAC,QAAQ;YAC3B,OAAO,MAAM,OAAO,CAAC,+BAA+B;QACtD;QACA,OAAO,MAAM,OAAO,CAAC,yBAAyB;IAChD;IACA,IAAI,CAAC,SAAS;QACZ,qBAAO,6LAAC;YAAI,WAAU;sBAAkD;;;;;;IAC1E;IAEA,qBAAO,6LAAC;QAAI,WAAU;;0BAClB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yMAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAU;oCAAE,QAAQ,MAAM;;;;;;;;;;;;;kCAG5D,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,2MAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAsB;kDACpD,6LAAC;wCAAE,MAAM,CAAC,IAAI,EAAE,QAAQ,KAAK,EAAE;wCAAE,WAAU;kDACxC,kBAAkB,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;0BAKxC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yMAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAc;kDAC5C,6LAAC;wCAAE,MAAM,CAAC,OAAO,EAAE,QAAQ,KAAK,EAAE;wCAAE,WAAU;kDAC3C,QAAQ,KAAK;;;;;;;;;;;;;;;;;;kCAIpB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,iNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;0CACtB,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAc;;;;;;oCAAgB;oCAAE,IAAI,KAAK,QAAQ,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;AAK1G;KAlDa","debugId":null}},
    {"offset": {"line": 1914, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/DiagnosisPanel.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FileTextIcon, ClipboardListIcon, CalendarIcon, PlusIcon, UserIcon } from 'lucide-react';\r\nimport { MedicineEntry } from './MedicineEntry';\r\nimport { User } from '../datats/mockPatients';\r\nimport { Medicine } from '../datats/auth';\r\nimport { PatientProfile } from './PatientProfile';\r\n\r\n// Interface cho thông tin bệnh nhân trong hàng đợi\r\ninterface PatientInQueue {\r\n  _id: string;\r\n  patient: string;\r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\r\n  doctorId?: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  __v?: number;\r\n  patientInfo: User | null;\r\n}\r\n\r\ninterface DiagnosisPanelProps {\r\n  patient: User | null;\r\n  queueInfo: PatientInQueue | null;\r\n  onMarkAsDone: (queueId: string) => void;\r\n}\r\n\r\nexport const DiagnosisPanel: React.FC<DiagnosisPanelProps> = ({\r\n  patient,\r\n  queueInfo,\r\n  onMarkAsDone\r\n}) => {\r\n  const [diagnosis, setDiagnosis] = useState('');\r\n  const [prescription, setPrescription] = useState<Medicine[]>([]);\r\n  const [followUp, setFollowUp] = useState(false);\r\n  const [followUpDate, setFollowUpDate] = useState('');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Reset form fields when patient changes\r\n    setDiagnosis('');\r\n    setPrescription([]);\r\n    setFollowUp(false);\r\n    setFollowUpDate('');\r\n    setError(null);\r\n  }, [patient]);\r\n\r\n  const canComplete = diagnosis.trim() !== '' && prescription.length > 0;\r\n\r\n  const handleComplete = () => {\r\n    if (diagnosis.trim() === '') {\r\n      setError('Vui lòng nhập thông tin chẩn đoán');\r\n      return;\r\n    }\r\n    if (prescription.length === 0) {\r\n      setError('Vui lòng thêm ít nhất một loại thuốc');\r\n      return;\r\n    }\r\n    setError(null);\r\n    if (queueInfo) onMarkAsDone(queueInfo._id);\r\n  };\r\n\r\n  const handleSave = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!patient || !queueInfo) return;\r\n    \r\n    // TODO: Implement save functionality with mock data\r\n    console.log('Saving diagnosis:', {\r\n      patientId: queueInfo.patient,\r\n      queueId: queueInfo._id,\r\n      diagnosis,\r\n      prescription,\r\n      followUp,\r\n      followUpDate\r\n    });\r\n    \r\n    // Cập nhật trạng thái queue\r\n    onMarkAsDone(queueInfo._id);\r\n  };\r\n\r\n  const handleAddMedicine = () => {\r\n    // Tạo thuốc mới với cấu trúc phù hợp với Medicine từ auth.ts\r\n    const newMedicine: Medicine = {\r\n      id: Date.now().toString(),\r\n      name: '',\r\n      totalPills: 0,\r\n      schedule: ''\r\n    };\r\n    setPrescription([...prescription, newMedicine]);\r\n  };\r\n\r\n  const handleUpdateMedicine = (updatedMedicine: Medicine) => {\r\n    setPrescription(prescription.map(med => \r\n      med.id === updatedMedicine.id ? updatedMedicine : med\r\n    ));\r\n  };\r\n\r\n  const handleRemoveMedicine = (medicineId: string) => {\r\n    setPrescription(prescription.filter(med => med.id !== medicineId));\r\n  };\r\n\r\n  if (!patient) {\r\n    return <div className=\"bg-white rounded-lg shadow-md h-full flex items-center justify-center p-8\">\r\n        <div className=\"text-center\">\r\n          <FileTextIcon className=\"mx-auto h-12 w-12 text-gray-600\" />\r\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\r\n            Chưa chọn bệnh nhân\r\n          </h3>\r\n          <p className=\"mt-1 text-sm text-gray-700\">\r\n            Vui lòng chọn bệnh nhân từ danh sách chờ để bắt đầu khám\r\n          </p>\r\n        </div>\r\n      </div>;\r\n  }\r\n\r\n  return <div className=\"bg-white rounded-lg shadow-md h-full\">\r\n      <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\r\n        <div>\r\n          <h2 className=\"text-lg font-medium text-gray-900\">{patient?.fullName || 'Không có tên'}</h2>\r\n          <p className=\"text-sm text-gray-500\">\r\n            {patient?.email} • {patient?.phone}\r\n          </p>\r\n        </div>\r\n        <button\r\n          onClick={handleComplete}\r\n          disabled={!canComplete}\r\n          className={`px-4 py-2 text-sm font-semibold rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors ${canComplete ? 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500 cursor-pointer' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}\r\n        >\r\n          Hoàn thành khám\r\n        </button>\r\n      </div>\r\n      <div className=\"p-4 overflow-y-auto space-y-6\" style={{\r\n      maxHeight: 'calc(100vh - 250px)'\r\n    }}>\r\n        {error && (\r\n          <div className=\"mb-4 text-red-600 font-medium text-base\">{error}</div>\r\n        )}\r\n        <div>\r\n          <h3 className=\"text-sm font-medium text-gray-900 flex items-center mb-3\">\r\n            <UserIcon className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n            Thông tin bệnh nhân\r\n          </h3>\r\n          <PatientProfile patient={patient} />\r\n        </div>\r\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n          <h3 className=\"text-sm font-medium text-gray-900 flex items-center\">\r\n            <ClipboardListIcon className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n            Thông tin khám bệnh\r\n          </h3>\r\n          <div className=\"mt-2 text-sm text-gray-800\">\r\n            <p>\r\n              <strong>Thời gian chờ:</strong>{' '}\r\n              {queueInfo ? `${Math.floor((new Date().getTime() - new Date(queueInfo.createdAt).getTime()) / 60000)} phút` : 'Không xác định'}\r\n            </p>\r\n            <p>\r\n              <strong>Trạng thái:</strong>{' '}\r\n              <span className={`font-medium ${queueInfo?.status === 'waiting' ? 'text-yellow-600' : queueInfo?.status === 'in_progress' ? 'text-blue-600' : queueInfo?.status === 'completed' ? 'text-green-600' : 'text-red-600'}`}>\r\n                {queueInfo?.status === 'waiting' ? 'Đang chờ' : \r\n                queueInfo?.status === 'in_progress' ? 'Đang khám' : \r\n                queueInfo?.status === 'completed' ? 'Đã hoàn thành' : 'Đã hủy'}\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <strong>Ngày tạo:</strong>{' '}\r\n              {queueInfo ? new Date(queueInfo.createdAt).toLocaleString() : 'Không xác định'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <form onSubmit={handleSave} className=\"space-y-6\">\r\n          <div>\r\n            <label htmlFor=\"diagnosis\" className=\"block text-base font-semibold text-gray-900\">\r\n              Chẩn đoán\r\n            </label>\r\n            <textarea\r\n              id=\"diagnosis\"\r\n              value={diagnosis}\r\n              onChange={(e) => setDiagnosis(e.target.value)}\r\n              className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-600 focus:ring-blue-600 text-base text-gray-900 placeholder-gray-500\"\r\n              rows={3}\r\n              placeholder=\"Nhập thông tin chẩn đoán chi tiết cho bệnh nhân...\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <label className=\"block text-base font-semibold text-gray-900\">\r\n                Đơn thuốc\r\n              </label>\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleAddMedicine}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-base font-semibold rounded-md text-blue-700 bg-blue-100 hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 cursor-pointer\"\r\n              >\r\n                Thêm thuốc\r\n              </button>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              {prescription.map((medicine) => (\r\n                <MedicineEntry\r\n                  key={medicine.id}\r\n                  medicine={medicine}\r\n                  onUpdate={handleUpdateMedicine}\r\n                  onRemove={handleRemoveMedicine}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <div className=\"flex items-center mb-2\">\r\n              <input\r\n                id=\"followUp\"\r\n                type=\"checkbox\"\r\n                checked={followUp}\r\n                onChange={e => setFollowUp(e.target.checked)}\r\n                className=\"focus:ring-blue-500 h-5 w-5 text-blue-600 border-gray-300 rounded cursor-pointer\"\r\n              />\r\n              <label htmlFor=\"followUp\" className=\"ml-2 block text-base font-semibold text-gray-900 cursor-pointer select-none\">\r\n                Đặt lịch tái khám\r\n              </label>\r\n            </div>\r\n            {followUp && (\r\n              <div>\r\n                <label htmlFor=\"followUpDate\" className=\"block text-base font-semibold text-gray-900 mb-1\">\r\n                  Ngày tái khám\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <span className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <CalendarIcon className=\"h-5 w-5 text-gray-400\" />\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"followUpDate\"\r\n                    value={followUpDate}\r\n                    onChange={e => setFollowUpDate(e.target.value)}\r\n                    className=\"block w-full pl-10 rounded-md border-gray-300 shadow-sm focus:border-blue-600 focus:ring-blue-600 text-base text-gray-900\"\r\n                    min={new Date().toISOString().split('T')[0]}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>;\r\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2433, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/Dashboard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PatientList } from './PatientList';\r\nimport { DiagnosisPanel } from './DiagnosisPanel';\r\nimport { getAllQueuesWithPatientInfo, updateQueueStatus, User, Queue } from '../datats/mockPatients';\r\n\r\n// Interface cho thông tin bệnh nhân trong danh sách chờ\r\ninterface PatientInQueue {\r\n  _id: string; // ID của queue\r\n  patient: string; // ID của bệnh nhân\r\n  status: 'waiting' | 'in_progress' | 'completed' | 'canceled';\r\n  doctorId?: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  patientInfo: User | null;\r\n}\r\n\r\nexport const Dashboard = () => {\r\n  // State cho danh sách bệnh nhân đang chờ\r\n  const [patients, setPatients] = useState<PatientInQueue[]>([]);\r\n  // State cho bệnh nhân được chọn\r\n  const [selectedPatient, setSelectedPatient] = useState<PatientInQueue | null>(null);\r\n\r\n  // Lấy danh sách bệnh nhân đang chờ khi component mount\r\n  useEffect(() => {\r\n    loadPatients();\r\n  }, []);\r\n\r\n  // Hàm để tải danh sách bệnh nhân đang chờ\r\n  const loadPatients = () => {\r\n    // Lấy tất cả queue kèm thông tin bệnh nhân\r\n    const queues = getAllQueuesWithPatientInfo();\r\n    // Lọc chỉ lấy những bệnh nhân đang chờ khám (status = 'waiting')\r\n    const waitingPatients = queues.filter(q => q.status === 'waiting');\r\n    setPatients(waitingPatients);\r\n  };\r\n\r\n  // Xử lý khi chọn bệnh nhân\r\n  const handleSelectPatient = (patient: PatientInQueue) => {\r\n    setSelectedPatient(patient);\r\n  };\r\n\r\n  // Xử lý khi hoàn thành khám bệnh nhân\r\n  const handleMarkAsDone = (queueId: string) => {\r\n    // Cập nhật trạng thái queue thành 'completed'\r\n    updateQueueStatus(queueId, 'completed');\r\n    // Tải lại danh sách bệnh nhân\r\n    loadPatients();\r\n    // Bỏ chọn bệnh nhân hiện tại\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  // Sắp xếp bệnh nhân theo thời gian chờ giảm dần\r\n  const sortedPatients = [...patients].sort((a, b) => {\r\n    const waitA = new Date().getTime() - new Date(a.createdAt).getTime();\r\n    const waitB = new Date().getTime() - new Date(b.createdAt).getTime();\r\n    return waitB - waitA;\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col lg:flex-row w-full h-full gap-6\">\r\n      <div className=\"w-full lg:w-1/3 h-full\">\r\n        <PatientList \r\n          patients={sortedPatients} \r\n          onSelectPatient={handleSelectPatient} \r\n          selectedPatientId={selectedPatient ? selectedPatient._id : undefined} \r\n        />\r\n      </div>\r\n      <div className=\"w-full lg:w-2/3 h-full\">\r\n        <DiagnosisPanel \r\n          patient={selectedPatient?.patientInfo || null} \r\n          queueInfo={selectedPatient || null}\r\n          onMarkAsDone={handleMarkAsDone} \r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAkBO,MAAM,YAAY;;IACvB,yCAAyC;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC7D,gCAAgC;IAChC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAyB;IAE9E,uDAAuD;IACvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR;QACF;8BAAG,EAAE;IAEL,0CAA0C;IAC1C,MAAM,eAAe;QACnB,2CAA2C;QAC3C,MAAM,SAAS,CAAA,GAAA,uIAAA,CAAA,8BAA2B,AAAD;QACzC,iEAAiE;QACjE,MAAM,kBAAkB,OAAO,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK;QACxD,YAAY;IACd;IAEA,2BAA2B;IAC3B,MAAM,sBAAsB,CAAC;QAC3B,mBAAmB;IACrB;IAEA,sCAAsC;IACtC,MAAM,mBAAmB,CAAC;QACxB,8CAA8C;QAC9C,CAAA,GAAA,uIAAA,CAAA,oBAAiB,AAAD,EAAE,SAAS;QAC3B,8BAA8B;QAC9B;QACA,6BAA6B;QAC7B,mBAAmB;IACrB;IAEA,gDAAgD;IAChD,MAAM,iBAAiB;WAAI;KAAS,CAAC,IAAI,CAAC,CAAC,GAAG;QAC5C,MAAM,QAAQ,IAAI,OAAO,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;QAClE,MAAM,QAAQ,IAAI,OAAO,OAAO,KAAK,IAAI,KAAK,EAAE,SAAS,EAAE,OAAO;QAClE,OAAO,QAAQ;IACjB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,oJAAA,CAAA,cAAW;oBACV,UAAU;oBACV,iBAAiB;oBACjB,mBAAmB,kBAAkB,gBAAgB,GAAG,GAAG;;;;;;;;;;;0BAG/D,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,uJAAA,CAAA,iBAAc;oBACb,SAAS,iBAAiB,eAAe;oBACzC,WAAW,mBAAmB;oBAC9B,cAAc;;;;;;;;;;;;;;;;;AAKxB;GA5Da;KAAA","debugId":null}},
    {"offset": {"line": 2544, "column": 0}, "map": {"version":3,"sources":["file:///D:/Codes/Projects/hospitalityWeb/hospitality-website/my-app/src/app/dashboard-doctor/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { Header } from './Header';\r\nimport { Dashboard } from './Dashboard';\r\n\r\nexport default function DashboardDoctor() {\r\n  const { user, isAuthenticated } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      router.push('/login');\r\n    }\r\n  }, [isAuthenticated, router]);\r\n\r\n  if (!isAuthenticated || !user) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full min-h-screen bg-gray-50\">\r\n      <Header />\r\n      <main className=\"flex-1 w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\r\n        <Dashboard />\r\n      </main>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD;IACxC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,IAAI,CAAC,iBAAiB;gBACpB,OAAO,IAAI,CAAC;YACd;QACF;oCAAG;QAAC;QAAiB;KAAO;IAE5B,IAAI,CAAC,mBAAmB,CAAC,MAAM;QAC7B,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+IAAA,CAAA,SAAM;;;;;0BACP,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,kJAAA,CAAA,YAAS;;;;;;;;;;;;;;;;AAIlB;GA1BwB;;QACY,wIAAA,CAAA,UAAO;QAC1B,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}